{"ast":null,"code":"var _jsxFileName = \"/home/krishna/Desktop/Practice/React/ToDoList/todolist/src/component/todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport image from \"../\";\nimport \"./Todo.css\";\n\n// to get the data from LS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getLocalItmes = () => {\n  let list = localStorage.getItem('lists');\n  console.log(list);\n  if (list) {\n    return JSON.parse(localStorage.getItem('lists'));\n  } else {\n    return [];\n  }\n};\nconst Todo = () => {\n  _s();\n  const [inputData, setInputData] = useState('');\n  const [items, setItems] = useState(getLocalItmes());\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const addItem = () => {\n    if (!inputData) {\n      alert('plzz fill data');\n    } else if (inputData && !toggleSubmit) {\n      setItems(items.map(elem => {\n        if (elem.id === isEditItem) {\n          return {\n            ...elem,\n            name: inputData\n          };\n        }\n        return elem;\n      }));\n      setToggleSubmit(true);\n      setInputData('');\n      setIsEditItem(null);\n    } else {\n      const allInputData = {\n        id: new Date().getTime().toString(),\n        name: inputData\n      };\n      setItems([...items, allInputData]);\n      setInputData('');\n    }\n  };\n\n  // delete the items\n  const deleteItem = index => {\n    const updateditems = items.filter(elem => {\n      return index !== elem.id;\n    });\n    setItems(updateditems);\n  };\n\n  // edit the item\n  //     When user clikc on edit button \n\n  // 1: get the id and name of the data which user clicked to edit\n  // 2: set the toggle mode to change the submit button into edit button\n  // 3: Now update the value of the setInput with the new updated value to edit. \n  // 4: To pass the current element Id to new state variable for reference \n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id === id;\n    });\n    console.log(newEditItem);\n    setToggleSubmit(false);\n    setInputData(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n  // remove all \n  const removeAll = () => {\n    setItems([]);\n  };\n\n  // add data to localStorage\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add Your List Here \\u270C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u270D Add Items...\",\n            value: inputData,\n            onChange: e => setInputData(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add-btn\",\n            title: \"Add Item\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-edit add-btn\",\n            title: \"Update Item\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(elem => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: elem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-edit add-btn\",\n                  title: \"Edit Item\",\n                  onClick: () => editItem(elem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-trash-alt add-btn\",\n                  title: \"Delete Item\",\n                  onClick: () => deleteItem(elem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this)]\n            }, elem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn effect04\",\n            \"data-sm-link-text\": \"Remove All\",\n            onClick: removeAll,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" CHECK LIST \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 109\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Todo, \"cNWRGbDIxDIhVvSsHhb3oWrWf2k=\");\n_c = Todo;\nexport default Todo;\n\n//TODO Please Subscribe to ThapaTechnical Youtube Channel\n//TODO Click Here: https://www.youtube.com/thapatechnical\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","image","getLocalItmes","list","localStorage","getItem","console","log","JSON","parse","Todo","inputData","setInputData","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","alert","map","elem","id","name","allInputData","Date","getTime","toString","deleteItem","index","updateditems","filter","editItem","newEditItem","find","removeAll","setItem","stringify","e","target","value"],"sources":["/home/krishna/Desktop/Practice/React/ToDoList/todolist/src/component/todo.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport image from \"../\"\nimport \"./Todo.css\"\n\n\n// to get the data from LS\n\nconst getLocalItmes = () => {\n    let list = localStorage.getItem('lists');\n    console.log(list);\n\n    if (list) {\n        return JSON.parse(localStorage.getItem('lists'));\n    } else {\n        return [];\n    }\n}\n\nconst Todo = () => {\n\n    const [inputData, setInputData] = useState('');\n    const [items, setItems] = useState(getLocalItmes());\n    const [toggleSubmit, setToggleSubmit] = useState(true);\n    const [isEditItem, setIsEditItem] = useState(null);\n\n    const addItem = () => {\n        if (!inputData) {\n            alert('plzz fill data');\n        } else if(inputData && !toggleSubmit) {\n            setItems(\n                items.map((elem) => {\n                    if (elem.id === isEditItem) {\n                        return { ...elem, name: inputData }\n                    }\n                    return elem;\n                })\n            )\n                 setToggleSubmit(true);\n\n                 setInputData('');\n\n                 setIsEditItem(null);\n        } else {\n            const allInputData = { id: new Date().getTime().toString(), name:inputData }\n            setItems([...items, allInputData]);\n            setInputData('')\n        }\n    }\n\n    \n    // delete the items\n    const deleteItem = (index) => {\n        const updateditems = items.filter((elem) => {\n            return index !== elem.id;\n        });\n\n        setItems(updateditems);\n    }\n\n// edit the item\n//     When user clikc on edit button \n\n// 1: get the id and name of the data which user clicked to edit\n// 2: set the toggle mode to change the submit button into edit button\n// 3: Now update the value of the setInput with the new updated value to edit. \n// 4: To pass the current element Id to new state variable for reference \n    \n    \n    const editItem = (id) => {\n        let newEditItem = items.find((elem) => {\n            return elem.id === id\n        });\n        console.log(newEditItem);\n\n        setToggleSubmit(false);\n\n        setInputData(newEditItem.name);\n\n        setIsEditItem(id);\n\n    }\n    \n\n    // remove all \n    const removeAll = () => {\n         setItems([]);\n    }\n\n    // add data to localStorage\n    useEffect(() => {\n       localStorage.setItem('lists', JSON.stringify(items))\n    }, [items]);\n\n    return (\n        <>\n            <div className=\"main-div\">\n                <div className=\"child-div\">\n                    <figure>\n                        {/* <img src={todo} alt=\"todologo\" /> */}\n                        <figcaption>Add Your List Here ✌</figcaption>\n                    </figure>\n\n                    <div className=\"addItems\">\n                        <input type=\"text\" placeholder=\"✍ Add Items...\"\n                           value={inputData} \n                           onChange={(e) => setInputData(e.target.value) }\n                        />\n                        {\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i> :\n                                 <i className=\"far fa-edit add-btn\" title=\"Update Item\" onClick={addItem}></i>\n                        }\n                       \n                    </div>\n\n                    <div className=\"showItems\">\n                        \n                        {\n                            items.map((elem) => {\n                                return (\n                                    <div className=\"eachItem\" key={elem.id}>\n                                        <h3>{elem.name}</h3>\n                                        <div className=\"todo-btn\">\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(elem.id)}></i>\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(elem.id)}></i>\n                                        </div>\n                                  </div>\n                                )\n                            })\n\n                        }\n                       \n                    </div>\n                \n                    {/* clear all button  */}\n                    <div className=\"showItems\">\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span> CHECK LIST </span> </button>\n                    </div>\n                </div>\n          </div>  \n        </>\n    )\n}\n\nexport default Todo\n\n\n //TODO Please Subscribe to ThapaTechnical Youtube Channel\n //TODO Click Here: https://www.youtube.com/thapatechnical"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}